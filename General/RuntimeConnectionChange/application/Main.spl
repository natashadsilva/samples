namespace application ;

/**
 * This application demonstrates how to change the properties of exported streams and 
 * the subscription of an imported stream at runtime. 
 * See FilterAndExport.spl for an example of changing the properties of the Exported stream dynamically.
 * See Importers.spl for an example of changing the subscription of an Imported stream.
 * This application works as follows: 
 * Tweets are generated that mention different topics: #iPhone and #android and #siri.
* The FilterAndExport composite monitors  the sample tweets,  checks them for mentions of the current topic of interest,
*  and publishes a stream of tweets that match that topic. 
*  Initially, the topic is "#iPhone", but the currently trending topic  periodically changes.
 * The Importers composite contains 3 importers, one for each of #android and #iPhone, and one for iPhone and related hashtags.
 */
type Mentions = rstring tweet, list<rstring> tokens ;

composite Main
{
	param
		expression<float64> $initDelay : 10.0 ;
	graph

	/*
    	 * The data for this example is generated by this Beacon
    	 */
		stream<rstring tweet> Tweets = Beacon()
		{
			logic
				state :
				{
					list<rstring> tweetList = [ "I love my #iPhone!",
						"Just found a great restaurant, thanks #siri",
						"what a great time to be alive!  #thankful",
						"#siri just told me where I can go to repair my #iPhone",
						"#android rocks!" ] ;
				}

			param
				iterations : 90 ;
				// We need a delay for the connections to be established
				initDelay : $initDelay ;
				period : 1.0 ;
			output
				Tweets : tweet = "Tweet " +(rstring) IterationCount() + " " + tweetList [
					IterationCount() %(uint64) size(tweetList) ] ;
		}

		//Generate a "trending" topic every 30 seconds, this is used to update the exporter
		//See FilterAndExport.spl to see how this stream is consumed.
		stream<rstring pattern> Trending = Beacon()
		{
			param
				iterations : 2 ;
				initDelay : 30.0 + $initDelay ;
				period : 30.0 ;
			output
				Trending : pattern = IterationCount() == 0ul ? "#android" : "#siri" ;
		}

		() as exporter = FilterAndExport(Tweets ; Trending)
		{
		}

		() as importer = Importers()
		{
		}

}
