namespace application;

/**
 * This is the export part of the application.
 * The input stream  Tweets contains sample tweets. 
 *  Each tweet is checked  for mentions of the current topic and all matches
 * are published using Export.
 * The second input stream, Trending, is used to change the current topic.
 * When the current topic changes, the operator changes the topic of the Export stream (line 28)
 */
composite FilterAndExport(input Tweets,Trending) {
    param
        // let's make topic a parameter, but default it to "#iPhone".
        expression<rstring> $topic: "#iPhone";

    graph
        stream<Mentions> Tokenized = Custom(Tweets;Trending) {
            logic state: {
                mutable rstring current_pattern = $topic;
            }
            //The Trending stream provides updates on what is trending,
            onTuple Trending: {
               current_pattern = pattern;
               
            	//When we receive a new Trending topic, we change the export properties
            	//to announce, effectively, that this stream is now broadcasting tweets on the new trending topic.
           		//This allows importers that are only interested in that topic to  connect to the stream and disconnect when it is no longer trending.
               setOutputPortExportProperties({topic=pattern,source="twitter"},0u);
            }
            onTuple Tweets: {
                if (size(regexMatch(tweet,current_pattern)) > 0) {
                    submit({tweet = tweet,tokens=tokenize(tweet," \r\n;,",false)},Tokenized);
                    }
                }
            }

            // now, export
            () as exporter = Export(Tokenized) {
                param properties: {
                    topic = $topic,
                    source = "twitter"
                };
            }
        }
